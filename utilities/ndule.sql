-- Active: 1701414220904@@127.0.0.1@3306@ndule_DB

CREATE DATABASE IF NOT EXISTS ndule_DB;

CREATE TABLE MUSICIEN (
    ID_MUSICIEN INT AUTO_INCREMENT NOT NULL,
    MUSICIAN_NAME VARCHAR(50) NOT NULL,
    MUSICIAN_FIRST_NAME VARCHAR(50) NOT NULL,
    MUSICIAN_LAST_NAME VARCHAR(50) NOT NULL,
    MUSICIAN_PSEUDO VARCHAR(50) NOT NULL , 
    MUSICIAN_GENDER VARCHAR(20) NOT NULL ,
    MUSICIAN_PHONE VARCHAR(50) NOT NULL ,
    MUSICIAN_FACEBOOK VARCHAR(50) NOT NULL,
    MUSICIAN_INSTAGRAM VARCHAR(50) NOT NULL ,
    MUSICIAN_TWITTER VARCHAR(50) NOT NULL , 
    MUSICIAN_PICTURE VARCHAR(50) NOT NULL ,
    MUSICIAN_OFFICIAL BOOLEAN NOT NULL DEFAULT 0,
    MUSICIAN_EMAIL VARCHAR(50) NOT NULL,
    MUSICIAN_PASSORD VARCHAR(50) NOT NULL , 
    MUSICIAN_GENDER_MUSIC VARCHAR(50) NOT NULL ,
    PRIMARY KEY(ID_MUSICIEN)
);

CREATE TABLE CLIENT (
    ID_CLIENT INT AUTO_INCREMENT NOT NULL,
    CLIENT_PSEUDO VARCHAR(50) NOT NULL,
    CLIENT_EMAIL VARCHAR(50) NOT NULL,
    CLIENT_PASSWORD VARCHAR(50) NOT NULL,
    CLIENT_PROFILE VARCHAR(255) NOT NULL,
    CLIENT_GENDER VARCHAR(50) NOT NULL,
    CLIENT_PHONE VARCHAR(50) NOT NULL,
    PRIMARY KEY(ID_CLIENT)
);

CREATE TABLE MUSICIAN_FOLLOWERS (
    ID_FOLLOW INT AUTO_INCREMENT NOT NULL,
    ID_CLIENT INT NOT NULL ,
    ID_MUSICIEN INT NOT NULL , 
    DATE_FOLLOWED DATE NOT NULL,
    PRIMARY KEY(ID_FOLLOW),
    FOREIGN KEY (ID_CLIENT) REFERENCES CLIENT (ID_CLIENT),
    FOREIGN KEY (ID_MUSICIEN) REFERENCES MUSICIEN (ID_MUSICIEN)
);

CREATE TABLE IF NOT EXISTS ALBUM (
    ID_ALBUM INT AUTO_INCREMENT NOT NULL ,
    ALBUM_NAME VARCHAR(255) NOT NULL , 
    ALBUM_DATE DATETIME NOT NULL,
    ALBUM_IMAGE VARCHAR(255) NOT NULL ,
    PRIMARY KEY(ID_ALBUM)
);
  
CREATE TABLE IF NOT EXISTS MUSIC (
    ID_MUSIC INT AUTO_INCREMENT NOT NULL,
    ID_ALBUM INT NOT NULL ,
    ID_MUSICIEN INT NOT NULL ,
    MUSIC_TITLE VARCHAR(255) NOT NULL ,
    MUSIC_PATH VARCHAR(255) NOT NULL ,
    EXTRACT_PATH VARCHAR(255) NOT NULL ,
    MUSIC_GENDER VARCHAR(50) NOT NULL,
    MUSIC_FORMAT VARCHAR(50)  NOT NULL ,
    MUSIC_TYPE VARCHAR(50) NOT NULL,
    BACK_IMAGE VARCHAR(50) NOT NULL ,
    DURATION INT NOT NULL , 
    MUSIC_SIZE FLOAT NOT NULL ,
    PRIMARY KEY(ID_MUSIC),
    FOREIGN KEY(ID_ALBUM) REFERENCES ALBUM(ID_ALBUM),
    FOREIGN KEY (ID_MUSICIEN) REFERENCES MUSICIEN (ID_MUSICIEN)
);



CREATE TABLE IF NOT EXISTS MUSIC_RATINGS(
    ID_RATING INT AUTO_INCREMENT NOT NULL ,
    ID_MUSIC INT NOT NULL ,
    ID_CLIENT INT NOT NULL ,
    CATEGORY_RATING  VARCHAR(255) NOT NULL,
    NUMBER_RATES INT NOT NULL ,
    DATE_RATE DATE NOT NULL ,
    PRIMARY KEY (ID_RATING),
    FOREIGN KEY (ID_MUSIC) REFERENCES MUSIC (ID_MUSIC),
    FOREIGN KEY (ID_CLIENT) REFERENCES CLIENT (ID_CLIENT)
);



CREATE TABLE IF NOT EXISTS ALBUM_STARS (
    ID_STAR INT AUTO_INCREMENT NOT NULL ,
    ID_ALBUM INT NOT NULL,
    ID_CLIENT INT NOT NULL ,
    STAR_VALUE INT NOT NULL ,
    PRIMARY KEY(ID_STAR),
    FOREIGN KEY (ID_CLIENT) REFERENCES CLIENT (ID_CLIENT),
    FOREIGN KEY(ID_ALBUM) REFERENCES ALBUM(ID_ALBUM)
);

CREATE TABLE IF NOT EXISTS ABONNEMENT_PLAN (
    ID_ABONNEMENT_PLAN INT AUTO_INCREMENT NOT NULL,
    ABONNEMENT_DURATION INT NOT NULL ,
    ABONNEMENT_PRICE FLOAT NOT NULL ,
    ABONNEMENT_DEVISE FLOAT NOT NULL ,
    ABONNMENT_DISCOUNT FLOAT NOT NULL,
    PRIMARY KEY(ID_ABONNEMENT_PLAN)
    
) ;

CREATE TABLE IF NOT EXISTS ABONNEMENTS (
    ID_ABONNEMENT INT AUTO_INCREMENT NOT NULL ,
    ID_ABONNEMENT_PLAN INT NOT NULL ,
    ID_CLIENT INT NOT NULL ,
    DATE_ABONNEMENT DATETIME NOT NULL,
    STATE_ABONNEMENT BOOLEAN NOT NULL,
    PRIMARY KEY(ID_ABONNEMENT),
    FOREIGN KEY (ID_ABONNEMENT_PLAN) REFERENCES ABONNEMENT_PLAN (ID_ABONNEMENT_PLAN),
    FOREIGN KEY(ID_CLIENT) REFERENCES CLIENT(ID_CLIENT)
);

CREATE TABLE IF NOT EXISTS PLAY_LIST(
    ID_PLAY_LIST INT AUTO_INCREMENT NOT NULL ,
    PLAYLIST_NAME VARCHAR(255) NOT NULL ,
    ID_CLIENT INT NOT NULL ,
    PRIMARY KEY(ID_PLAY_LIST),
    FOREIGN KEY(ID_CLIENT) REFERENCES CLIENT(ID_CLIENT)
);

CREATE TABLE IF NOT EXISTS PLAY_LIST_MUSIC(
    ID_PLAY_LIST_MUSIC INT AUTO_INCREMENT NOT NULL,
    ID_PLAY_LIST INT NOT NULL ,
    ID_MUSIC INT NOT NULL ,
    PRIMARY KEY (ID_PLAY_LIST_MUSIC),
    FOREIGN KEY ( ID_PLAY_LIST) REFERENCES PLAY_LIST(ID_PLAY_LIST)
);

CREATE TABLE IF NOT EXISTS DOWNLOAD (
    ID_DOWNLOAD INT AUTO_INCREMENT NOT NULL,
    ID_CLIENT INT NOT NULL,
    ID_MUSIC INT NOT NULL,
    DATE_DOWNLOAD DATETIME,
    PRIMARY KEY(ID_DOWNLOAD),
    FOREIGN KEY(ID_CLIENT) REFERENCES CLIENT(ID_CLIENT),
    FOREIGN KEY (ID_MUSIC) REFERENCES MUSIC (ID_MUSIC)
);

CREATE TABLE IF NOT EXISTS STREAM(
    ID_STREAM INT AUTO_INCREMENT NOT NULL,
    ID_MUSIC INT NOT NULL,
    ID_CLIENT INT NOT NULL,
    DATE_STREAM DATETIME,
    PRIMARY KEY (ID_STREAM),
    FOREIGN KEY(ID_CLIENT) REFERENCES CLIENT(ID_CLIENT),
    FOREIGN KEY (ID_MUSIC) REFERENCES MUSIC (ID_MUSIC)
);

CREATE TABLE IF NOT EXISTS MUSICIEN_NOTIFICATION (
    ID_MUSICIEN_NOTIFICATION INT AUTO_INCREMENT NOT NULL,
    ID_MUSICIEN INT NOT NULL,
    NOTIFICATION_CONTENT VARCHAR(255) NOT NULL,
    DATE_NOTIFICATION DATETIME NOT NULL,
    PRIMARY KEY (ID_MUSICIEN_NOTIFICATION),
    FOREIGN KEY (ID_MUSICIEN) REFERENCES MUSICIEN (ID_MUSICIEN)
);

CREATE TABLE IF NOT EXISTS CLIENT_NOTIFICATION(
    ID_CLIENT_NOTIFICATION INT AUTO_INCREMENT NOT NULL,
    ID_CLIENT INT NOT NULL,
    NOTIFICATION_CONTENT VARCHAR(255),
    DATE_NOTIFICATION DATETIME NOT NULL,
    PRIMARY KEY (ID_CLIENT_NOTIFICATION),
    FOREIGN KEY(ID_CLIENT) REFERENCES CLIENT(ID_CLIENT)
);

CREATE TABLE IF NOT EXISTS SIGNALEMENT(
    ID_SIGNALEMENT INT AUTO_INCREMENT,
    ID_CLIENT INT NOT NULL,
    ID_MUSICIEN INT NOT NULL,
    TYPE_SIGNALEMENT VARCHAR(255) NOT NULL,
    DATE_SIGNALEMENT DATETIME NOT NULL,
    PRIMARY KEY (ID_SIGNALEMENT),
    FOREIGN KEY(ID_CLIENT) REFERENCES CLIENT(ID_CLIENT),
    FOREIGN KEY (ID_MUSICIEN) REFERENCES MUSICIEN (ID_MUSICIEN)
);
